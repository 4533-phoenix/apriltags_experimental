import"/assets/scripts/three.min.js";let BufferAttribute=THREE.BufferAttribute,BufferGeometry=THREE.BufferGeometry,FileLoader=THREE.FileLoader,Float32BufferAttribute=THREE.Float32BufferAttribute,Loader=THREE.Loader,Vector3=THREE.Vector3;class STLLoader extends Loader{constructor(e){super(e)}load(e,t,r,n){let o=this,i=new FileLoader(this.manager);i.setPath(this.path),i.setResponseType("arraybuffer"),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,function(r){try{t(o.parse(r))}catch(i){n?n(i):console.error(i),o.manager.itemError(e)}},r,n)}parse(e){var t;function r(e,t,r){for(let n=0,o=e.length;n<o;n++)if(e[n]!==t.getUint8(r+n))return!1;return!0}let n=function e(t){if("string"!=typeof t)return t;{let r=new Uint8Array(t.length);for(let n=0;n<t.length;n++)r[n]=255&t.charCodeAt(n);return r.buffer||r}}(e);return!function e(t){let n=new DataView(t),o=n.getUint32(80,!0);if(84+50*o===n.byteLength)return!0;let i=[115,111,108,105,100];for(let f=0;f<5;f++)if(r(i,n,f))return!1;return!0}(n)?function e(t){let r=new BufferGeometry,n=/solid([\s\S]*?)endsolid/g,o=/facet([\s\S]*?)endfacet/g,i=0,f=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,l=RegExp("vertex"+f+f+f,"g"),u=RegExp("normal"+f+f+f,"g"),a=[],s=[],$=new Vector3,g,d=0,_=0,c=0;for(;null!==(g=n.exec(t));){_=c;let h=g[0];for(;null!==(g=o.exec(h));){let b=0,w=0,F=g[0];for(;null!==(g=u.exec(F));)$.x=parseFloat(g[1]),$.y=parseFloat(g[2]),$.z=parseFloat(g[3]),w++;for(;null!==(g=l.exec(F));)a.push(parseFloat(g[1]),parseFloat(g[2]),parseFloat(g[3])),s.push($.x,$.y,$.z),b++,c++;1!==w&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+i),3!==b&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+i),i++}let m=_,p=c-_;r.addGroup(m,p,d),d++}return r.setAttribute("position",new Float32BufferAttribute(a,3)),r.setAttribute("normal",new Float32BufferAttribute(s,3)),r}("string"!=typeof(t=e)?new TextDecoder().decode(t):t):function e(t){let r=new DataView(t),n=r.getUint32(80,!0),o,i,f,l=!1,u,a,s,$,g;for(let d=0;d<70;d++)1129270351==r.getUint32(d,!1)&&82==r.getUint8(d+4)&&61==r.getUint8(d+5)&&(l=!0,u=new Float32Array(9*n),a=r.getUint8(d+6)/255,s=r.getUint8(d+7)/255,$=r.getUint8(d+8)/255,g=r.getUint8(d+9)/255);let _=new BufferGeometry,c=new Float32Array(9*n),h=new Float32Array(9*n);for(let b=0;b<n;b++){let w=84+50*b,F=r.getFloat32(w,!0),m=r.getFloat32(w+4,!0),p=r.getFloat32(w+8,!0);if(l){let x=r.getUint16(w+48,!0);(32768&x)==0?(o=(31&x)/31,i=(x>>5&31)/31,f=(x>>10&31)/31):(o=a,i=s,f=$)}for(let A=1;A<=3;A++){let L=w+12*A,B=9*b+(A-1)*3;c[B]=r.getFloat32(L,!0),c[B+1]=r.getFloat32(L+4,!0),c[B+2]=r.getFloat32(L+8,!0),h[B]=F,h[B+1]=m,h[B+2]=p,l&&(u[B]=o,u[B+1]=i,u[B+2]=f)}}return _.setAttribute("position",new BufferAttribute(c,3)),_.setAttribute("normal",new BufferAttribute(h,3)),l&&(_.setAttribute("color",new BufferAttribute(u,3)),_.hasColors=!0,_.alpha=g),_}(n)}}export default STLLoader;